colorize
  ✓ should return ' <value>' for a scalar value
  ✓ should return '-<old value>', '+<new value>' for a scalar diff
  ✓ should return '-<removed key>: <removed value>' for an object diff with a removed key
  ✓ should return '+<added key>: <added value>' for an object diff with an added key
  ✓ should return '+<added key>: <added stringified value>' for an object diff with an added key and a non-scalar value
  ✓ should return ' <modified key>: <colorized diff>' for an object diff with a modified key
  ✓ should return '+<inserted item>' for an array diff
  ✓ should return '-<deleted item>' for an array diff

diff
  with simple scalar values
    ✓ should return undefined for two identical numbers
    ✓ should return undefined for two identical strings
    ✓ should return { __old: <old value>, __new: <new value> } object for two different numbers
  with objects
    ✓ should return undefined for two objects with identical contents
    ✓ should return undefined for two object hierarchies with identical contents
    ✓ should return { <key>__deleted: <old value> } when the second object is missing a key
    ✓ should return { <key>__added: <new value> } when the first object is missing a key
    ✓ should return { <key>: { __old: <old value>, __new: <new value> } } for two objects with diffent scalar values for a key
    ✓ should return { <key>: <diff> } with a recursive diff for two objects with diffent values for a key
  with arrays of scalars
    ✓ should return undefined for two arrays with identical contents
    ✓ should return [..., ['-', <removed item>], ...] for two arrays when the second array is missing a value
    ✓ should return [..., ['+', <added item>], ...] for two arrays when the second one has an extra value
    ✓ should return [..., ['+', <added item>]] for two arrays when the second one has an extra value at the end (edge case test)
  with arrays of objects
    ✓ should return undefined for two arrays with identical contents
    ✓ should return [..., ['-', <removed item>], ...] for two arrays when the second array is missing a value
    ✓ should return [..., ['+', <added item>], ...] for two arrays when the second array has an extra value
    ✓ should return [..., ['~', <diff>], ...] for two arrays when an item has been modified (note: involves a crazy heuristic)




kind - indicates the kind of change; will be one of the following:
  N - indicates a newly added property/element
  D - indicates a property/element was deleted
  E - indicates a property/element was edited
  A - indicates a change occurred within an array
path - the property path (from the left-hand-side root)
lhs - the value on the left-hand-side of the comparison (undefined if kind === 'N')
rhs - the value on the right-hand-side of the comparison (undefined if kind === 'D')
index - when kind === 'A', indicates the array index where the change occurred
item - when kind === 'A', contains a nested change record indicating the change that occurred at the array index